{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","cityName","setCityName","latitude","setLatitude","longitude","setLongitude","disabled","setDisabled","status","setStatus","getLatLon","length","city","cities","find","c","name","undefined","className","id","value","placeholder","onChange","event","target","onKeyPress","key","onClick","textArea","document","createElement","body","appendChild","setSelectionRange","select","success","execCommand","remove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"21xpsBA6FeA,MAzFf,WAEE,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA4BR,mBAAS,IAArC,mBAAOS,EAAP,KAAeC,EAAf,KAsBMC,EAAY,WAChB,GAAuB,IAApBV,EAASW,OAAcF,EAAU,gCAC/B,CACH,IAAMG,EAAOC,EAAOC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAAShB,UAC7BiB,IAATL,GACDL,GAAY,GACZJ,EAAYS,EAAKV,UACjBG,EAAaO,EAAKR,WAClBK,EAAU,KAEVA,EAAU,SAAD,OAAUT,EAAV,iBAkBf,OACE,gCACE,+CACA,qBAAKkB,UAAW,UAAhB,SACE,uBACEC,GAAG,cACHC,MAAOpB,EACPqB,YAAY,kBACZC,SAxDa,SAASC,GACF,OAAvBA,EAAMC,OAAOJ,OAAyC,KAAvBG,EAAMC,OAAOJ,QAC7CjB,EAAY,IACZE,EAAa,KAEfJ,EAAYsB,EAAMC,OAAOJ,QAoDnBK,WAjDS,SAASF,GACP,UAAdA,EAAMG,KAAiBhB,KAiDpBJ,SAAUA,MAGd,qBAAKY,UAAW,UAAhB,SAA2B,wBAAQZ,SAAUA,EAAUY,UAAW,gBAAiBS,QAASjB,EAAjE,gCAC3B,qBAAKQ,UAAW,UAAhB,SAA2B,wBAAQA,UAAW,gBAAiBS,QAlDrD,WACZ1B,EAAY,IACZE,EAAY,IACZE,EAAa,IACbI,EAAU,IACVF,GAAY,IA6CiB,gDAEZ,IAAbD,EACE,sBAAKY,UAAW,UAAhB,UACE,wBAAQA,UAAW,gBAAiBS,QA/BtB,WACtB,IAAMC,EAAWC,SAASC,cAAc,YACxCF,EAASR,MAAT,gBAA0BpB,EAA1B,uBAAiDE,EAAjD,wBAAyEE,GACzEyB,SAASE,KAAKC,YAAYJ,GAC1BA,EAASK,kBAAkB,EAAG,OAC9BL,EAASM,SACT,IAAMC,EAAUN,SAASO,YAAY,QACrCR,EAASS,SACNF,GACD1B,EAAU,6CAAD,OAA8CT,EAA9C,uBAAqEE,EAArE,wBAA6FE,EAA7F,OAsBH,4CACA,6CAAe,sBAAMe,GAAG,cAAT,SAAwBjB,OACvC,8CAAgB,sBAAMiB,GAAG,eAAT,SAAyBf,UAEzC,KAGJ,8BACGI,QC1EI8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BZ,M","file":"static/js/main.04e8633e.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport cities from './db/cities.json';\n\nfunction App() {\n\n  const [cityName,setCityName] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [status, setStatus] = useState(\"\");\n\n  const handleChange = function(event) {\n    if(event.target.value === null || event.target.value === \"\") {\n      setLatitude(\"\")\n      setLongitude(\"\")\n    } \n    setCityName(event.target.value)\n  }\n\n  const keyPress = function(event) {\n    if(event.key === \"Enter\") getLatLon()\n  }\n\n  const reset = function() {\n    setCityName(\"\");\n    setLatitude(\"\");\n    setLongitude(\"\");\n    setStatus(\"\");\n    setDisabled(false);\n  }\n\n  const getLatLon = function() {\n    if(cityName.length === 0) setStatus(`Please enter a city name`);\n    else {\n      const city = cities.find(c => c.name === cityName);\n      if(city !== undefined) {\n        setDisabled(true);\n        setLatitude(city.latitude);\n        setLongitude(city.longitude);\n        setStatus(\"\");\n      } else {\n        setStatus(`City: ${cityName} Not Found`)\n      }\n    }\n  }\n\n  const copyToClipboard = function() {\n    const textArea = document.createElement(\"textarea\");\n    textArea.value = `City: ${cityName}, Latitude\" ${latitude}, Longitude: ${longitude}`;\n    document.body.appendChild(textArea);\n    textArea.setSelectionRange(0, 99999);\n    textArea.select();\n    const success = document.execCommand(\"copy\");\n    textArea.remove();\n    if(success) {\n      setStatus(`Successfully Copied to Clipboard - \"City: ${cityName}, Latitude: ${latitude}, Longitude: ${longitude}\"`);\n    }\n  }\n\n  return (\n    <div>\n      <h1>City Geocodes</h1>\n      <div className={\"gridRow\"}>\n        <input \n          id=\"id-cityName\"\n          value={cityName}\n          placeholder=\"Enter city name\" \n          onChange={handleChange} \n          onKeyPress={keyPress}\n          disabled={disabled}\n        />\n      </div>\n      <div className={\"gridRow\"}><button disabled={disabled} className={\"button-styles\"} onClick={getLatLon}>Get Co-ordinates</button></div>\n      <div className={\"gridRow\"}><button className={\"button-styles\"} onClick={reset}>Check Geocodes for another City</button></div>\n      {\n        disabled === true ? \n          <div className={\"gridRow\"}>\n            <button className={\"button-styles\"} onClick={copyToClipboard}>Copy Co-ordinates to Clipboard</button>\n            <div>Latitude: <span id=\"id-latitude\">{latitude}</span></div>\n            <div>Longitude: <span id=\"id-longitude\">{longitude}</span></div>\n          </div>\n          : null\n      }\n      {\n        <div>\n          {status}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}